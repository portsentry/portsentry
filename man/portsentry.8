.\" Automatically generated by Pandoc 3.1.11.1
.\"
.TH "portsentry" "8" "" "" "System Manager\[cq]s Manual"
.SH NAME
\f[B]portsentry\f[R] \- Detect and respond to port scans against a
target host in real\-time
.SH SYNOPSIS
\f[B]portsentry\f[R] [options]
.SH DESCRIPTION
Portsentry does three main things:
.IP \[bu] 2
It listens to TCP and/or UDP ports you specify.
.IP \[bu] 2
It stealthily (or visibly) logs connection attempts to the ports you
have specified.
.IP \[bu] 2
It can optionally execute scripts or applications when connection
attempts are made.
.PP
The most common use\-case for Portsentry is to block unwanted service
enumeration attempts against your host.
This could be accomplished by simply listening to a wide variety of
\f[B]unused\f[R] ports and block all connection attempts to those ports.
Portsentry can also be deployed as a Network Intrusion Detection System
(NIDS).
By listening to unused ports on your internal networks, you will be
notified as soon as a potential attacker tries to scan for services
within your organization.
A more detailed explanation and guide of the various uses of portsentry,
refer to the \c
.UR
https://github.com/portsentry/portsentry/blob/master/docs/HOWTO-Use.md
HOWTO\-Use
.UE \c
\ guide.
.SH OPTIONS
.SS \-\-stealth
Stealth mode \f[B](default)\f[R] uses libpcap (or raw sockets on Linux
if desired, see the \f[B]\-m\f[R] option) in order to quietly listen for
incoming packets on the network.
The main advantage of Stealth mode is that the system gives off no
indication that it is listening for incoming packets making it very
difficult (if not impossible) for an attacker to detect that Portsentry
is running.
.SS \-\-connect
Connect mode \f[B](legacy option)\f[R] uses the kernel socket API to
listen for incoming packets.
Connect mode is considered a legacy mode and is mainly preserved for
users with very specific use\-cases.
For example, connect mode can be used to add a \[lq]port banner\[rq],
thus sending a message to anyone connecting to a specified port.
Be aware however that connect mode comes with several additional
security implications which must be considered.
For example:
.IP \[bu] 2
When monitoring TCP ports, Portsentry will require a three\-way TCP
handshake to be completed before Portsentry registers the connection
attempt.
Thus, a \[lq]stealth scan attack\[rq] will go unnoticed by Portsentry.
.IP \[bu] 2
Additionally, other TCP protocol attacks, such as SYN floods must be
taken into consideration when using Connect Mode.
.IP \[bu] 2
Connect mode will require Portsentry to bind to each port to be
monitored individually.
If you are monitoring a large number of ports you could potentially hit
the max number of file descriptors allowed by the system and could also
lead to performance issues.
Most modern systems will allow you to increase the number of max opened
file descriptors, but this is something to be aware of.
.SS Stealth Mode Options
This section covers options only relevant when Stealth mode
\f[B]\-\-stealth\f[R] is used.
.SS \-m, \-\-method=pcap|raw
\f[B]This option is only relevant on Linux\f[R].
It sets the sentry method to use in stealth mode.
Can be set to use either \f[B]pcap\f[R] or Linux \f[B]raw\f[R] sockets.
\f[B](default: pcap)\f[R]
.IP \[bu] 2
\f[B]pcap\f[R]: Uses the libpcap library to listen for incoming packets.
This is the default method and is recommended for most use\-cases.
.IP \[bu] 2
\f[B]raw\f[R]: Uses the Linux raw socket API to listen for incoming
packets.
This method is less efficient than pcap and is not recommended unless
you have a specific use\-case where pcap is not available or not
desired.
.SS \-i, \-\-interface=ALL|ALL_NLO|<interface>
\f[B]This option is only relevant when pcap mode is used\f[R].
Specify interface(s) to listen on.
You can either specify an \[lq]interface alias or a specific interface:
.IP \[bu] 2
\f[CR]ALL\f[R] \- Listen on all interfaces (including the loopback
interface) (Alias)
.IP \[bu] 2
\f[CR]ALL_NLO\f[R] \- Listen on all interfaces except the loopback
interface (Alias)
.IP \[bu] 2
\f[CR]any\f[R] \- This is a special \[lq]interface\[rq] option,
built\-in to libpcap.
The libpcap library will attempt to listen to \[lq]all\[rq] interfaces
except some special interfaces when using this option.
.IP \[bu] 2
\f[CR]<interface>\f[R] \- Listen on the specified interface.
NOTE: You can specify multiple interfaces by using multiple
\f[CR]\-\-interface\f[R] switches,
e.g.\ \f[CR]\-\-interface eth0 \-\-interface eth1\f[R]
.SS Generic Options
These options can be used regardless of mode used.
.SS \-L, \-\-disable\-local\-check
Under normal operations; if Portsentry detects traffic with the same
source and destination IP address, no logging or actions are performed.
This is to prevent Portsentry from potentially taking actions on itself.
This option disables this logic.
I.e, logging and actions are taken on the host on which Portsentry is
run.
Use this option with care.
.SS \-l, \-\-logoutput=stdout|syslog
Portsentry can log to either \f[CR]stdout\f[R] or \f[CR]syslog\f[R].
The log output can be set using the \f[CR]\-\-logoutput\f[R] (or
\f[CR]\-l\f[R]) command line option.
The default log output is \f[CR]stdout\f[R].
.SS \-c, \-\-configfile=path
Portsentry can be configured using an alternative path for the
configuration file.
The configuration file can be set using the \f[CR]\-\-configfile\f[R]
(or \f[CR]\-c\f[R]) command line option.
The default configuration file is
\f[CR]/etc/portsentry/portsentry.conf\f[R].
See portsentry.conf(8) for more information.
.SS \-D, \-\-daemon
Portsentry can be run as a daemon using the \f[CR]\-\-daemon\f[R] (or
\f[CR]\-D\f[R]) command line option.
This will cause Portsentry to fork into the background and run as a
daemon.
By default portsentry runs in the foreground.
.SS \-d, \-\-debug
Enable debug output using the \f[CR]\-\-debug\f[R] (or \f[CR]\-d\f[R])
command line option.
This will cause Portsentry to become very noisy.
.SS \-v, \-\-verbose
Enable verbose output using the \f[CR]\-\-verbose\f[R] (or
\f[CR]\-v\f[R]) command line option.
This will cause Portsentry to log additional information to the log
output.
.SS \-h, \-\-help
Display command line help message
.SS \-V, \-\-version
Display version information
.SS EXAMPLES
Review the \c
.UR
https://github.com/portsentry/portsentry/blob/master/docs/HOWTO-Use.md
HOWTO\-Use
.UE \c
\ guide for detailed setup scenarios and configuration guides.
.SS FILES
/etc/portsentry/portsentry.conf
.PP
/etc/portsentry/portsentry.ignore
.PP
/var/log/portsentry.log
.PP
/tmp/portsentry.blocked
.SS BUGS
All bugs should be reported via the portsentry github issue tracker
https://github.com/portsentry/portsentry/issues
.SS AUTHORS
Marcus Hufvudsson \c
.MT mh@protohuf.com
.ME \c
.SS SEE ALSO
portsentry.conf(8)
.SS LICENSE
Portsentry is licensed under the Common Public License v1.0
